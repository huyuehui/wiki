#+TITLE: Gentoo Linux Setup Guide
#+DATE: [2014-07-07 Mon 16:32]
#+KEYWORDS: gentoo
#+OPTIONS: H:5
#+SETUPFILE: ../org-templates/level-1.org

* User Administration

** Adding a User for Daily Use

The following table lists a number of important groups you might wish to use:
#+ATTR_HTML: :frame border
| Group | Description                                                                |
|-------+----------------------------------------------------------------------------|
| /     | <>                                                                         |
|-------+----------------------------------------------------------------------------|
| audio | be able to access the audio devices                                        |
|-------+----------------------------------------------------------------------------|
| usb   | be able to access USB devices                                              |
|-------+----------------------------------------------------------------------------|
| video | be able to access video capturing hardware and doing hardware acceleration |
|-------+----------------------------------------------------------------------------|
| users | group for normal users                                                     |
|-------+----------------------------------------------------------------------------|
| wheel | be able to use su                                                          |

#+BEGIN_EXAMPLE
  # Login as root first
  Login: root↲
  Password: (Your root password)↲

  # -m, --create-home; -G, --groups; -s, --shell
  useradd -m -G audio,usb,video,users,wheel -s /bin/bash (Your user name)↲

  passwd (Your user name)↲
  Password: (Enter the password)↲
  Re-enter password: (Re-enter the password to verify)↲
#+END_EXAMPLE

* Using Portage

** Specify Package Versions

According to [[http://wiki.gentoo.org/wiki/Version_specifier][Version Specifier]], we have:
1. Basic
   + category/package :: Matches any version of a package.
2. By Version
   + ~category/package-1.23 :: Matches version and any revision.
   + =category/package-1.23* :: Matches a version by the version range. Note that there's no "." before the "*".
   + =category/package-1.23 :: Matches a version exactly.
   + >=category/package-1.23 :: Matches the specified version or any higher version.
   + >category/package-1.23 :: Matches a version strictly later than specified.
   + <category/package-1.23 :: Matches a version strictly older than specified.
   + <=category/package-1.23 :: Matches the specified version or any older version.
3. By Slot
   + category/package:2 :: Matches package in the specified package SLOT. Note that there is no prefix.
4. By Overlay
   + category/package::overlay :: Matches a package from a specific overlay. This can be combined with other specifiers. The official portage tree is ::gentoo.

** Local Portage Configure Files
*** repos.conf
There is a new plug-in sync system in ~>=sys-apps/portage-2.2.16~. Create ~/etc/portage/repos.conf/gentoo.conf~ if not exists:
#+BEGIN_SRC emacs-lisp :exports results
  (with-temp-buffer
    (insert-file-contents "/etc/portage/repos.conf/gentoo.conf")
    (buffer-string))
#+END_SRC
Make sure ~GENTOO_MIRRORS~ is set in ~/etc/portage/make.conf~ because it is required by ~emerge-webrsync~ which is used in ~webrsync~ sync type.
Refer to [[https://wiki.gentoo.org/wiki//etc/portage/repos.conf][Gentoo::Wiki::repos.conf]] and [[https://www.gentoo.org/news/2019/07/03/sks-key-poisoning.html][SKS keyserver poisoning]] for further details.

You can sync the Portage tree as following:
#+BEGIN_EXAMPLE
  # -a, --auto Sync auto-sync enabled repos only
  emaint sync -a↲

  # SYNC a particular repo
  emaint sync -r *repo_name*
#+END_EXAMPLE

*** package.unmask/*

As for now, [2014-07-10 Thu 16:35], libav-10.2 & mpv-0.4.0 have been hard masked. Unmask them as following:
#+BEGIN_EXAMPLE
  cd /etc/portage/package.unmask↲

  cat libav↲

  >=media-video/libav-10

  cat mpv

  >=media-video/mpv-0.4
#+END_EXAMPLE

*** package.license
Ref: [[https://wiki.gentoo.org/wiki/Handbook:AMD64/Working/Portage#Licenses][Gentoo::Handbook::Licenses]]

Some packages requires explicit license acknowledgement:
#+BEGIN_EXAMPLE
  cat /etc/portage/package.license↲

  app-arch/p7zip unRAR
  www-client/google-chrome google-chrome
#+END_EXAMPLE
A migration tool ~app-portage/elicense~ is available. It scans
installed packages for licenses that are no longer accepted, and
generates a list in the same format as the ~package.license~ file. See
elicense's README for further details.
*** package.use

Custom USE flags for individual package. For USE flags defined in
Gentoo's profile ~desktop~[fn:1] but *missing* in ~no-multilib~, don't
forget to add them manually.
#+BEGIN_EXAMPLE
  cat /etc/portage/package.use↲

  >=dev-libs/libxml2-2.9.1-r4 python
  >=x11-wm/fvwm-2.6.5 png truetype
  >=x11-terms/rxvt-unicode-9.20 256-color xft alt-font-width -vanilla perl
  >=sys-libs/zlib-1.2.8-r1 minizip
  >=media-libs/harfbuzz-0.9.23 icu
  >=dev-libs/libxml2-2.9.1-r4 icu
  >=app-arch/p7zip-9.20.1 rar
  >=app-editors/emacs-24.3 gif jpeg png svg tiff xft
  #video
  >=x11-libs/libva-1.3.1 opengl
  >=media-libs/mesa-10.2 dri3 -vaapi -llvm -gallium

  >=dev-vcs/git-2.0 -perl -python
  #multimedia
  >=media-libs/libbluray-0.6 java
  #>=media-video/libav-10 avx avx2 alsa threads truetype vorbis vpx x264 xvid
  >=media-video/ffmpeg-2.7 aac alsa fontconfig opengl truetype vorbis
  >=media-video/mpv-0.7.3 bluray dvd jpeg lua -xscreensaver -xv
  #google-chrome
  >=app-text/ghostscript-gpl-9.14 cups

  #dhcpcd: disable ipv6
  #>=net-misc/dhcpcd-6.4.3 -ipv6
  #tesseract
  >=app-text/tesseract-3 png tiff linguas_zh_TW osd
  >=media-libs/leptonica-1.71-r1 png tiff
  #imagemagick
  >=media-gfx/imagemagick-6.8 jpeg png tiff fontconfig truetype
  #java
  #>=dev-java/icedtea-bin-7 -cups
  #graphviz
  >=media-libs/gd-2.2.2 fontconfig truetype png jpeg
  # required by dev-scheme/guile-2.0.12::gentoo
  # required by sys-devel/autogen-5.18.4::gentoo
  # required by net-libs/gnutls-3.4.14::gentoo[tools]
  # required by net-print/cups-2.1.4::gentoo[ssl]
  # required by www-client/google-chrome-52.0.2743.116::gentoo
  # required by @selected
  # required by @world (argument)
  >=dev-libs/boehm-gc-7.4.2 threads

  # required by x11-base/xorg-drivers-1.19::gentoo[video_cards_i965]
  >=x11-base/xorg-server-1.19.1 glamor

  # To run fstrim periodically
  sys-process/cronie anacro

  ## Defined in Gentoo's desktop profile, missing in no-multilib.
  # required by x11-misc/xdg-utils-1.1.1-r1:0/0::gentoo
  app-text/xmlto text

  # Ilya Tumaykin <itumaykin+gentoo@gmail.com> (02 Feb 2017)
  # Enable luajit for OSC and youtube-dl support by default.
  # Override default +sdl from desktop profile and disable sdl outputs.
  # These outputs are for systems without a proper audio/video support.
  media-video/mpv lua luajit -sdl
#+END_EXAMPLE

*** package.accept\under{}keywords/*
Refer to [[https://wiki.gentoo.org/wiki/ACCEPT_KEYWORDS][Gentoo::Wiki::ACCEPT\under{}KEYWORDS]] for details.
#+begin_example
  ...
  ,** — Package is always visible (KEYWORDS are ignored completely).

  The last choice is useful for live package versions
  (e.g. SVN/Git/Mercurial package versions) because live ebuilds don't
  have a KEYWORDS variable.
  ...
#+end_example
Take ~gui-apps/wofi~[fn:11] as a example.
#+begin_example
  mkdir -p /etc/portage/package.accept_keywords/↲
  vi wofi↲

  gui-apps/wofi **
  -------------------------------------------------
  emerge --ask wofi↲
#+end_example
** Overlay

*** External Overlay
Use vscodium-bin as example:
#+BEGIN_EXAMPLE
  FILE: /etc/portage/repos.conf/jorgicio.conf

  [jorgicio]
  priority = 10
  location = /usr/local/overlay/jorgicio
  sync-type = git
  sync-uri = git://github.com/jorgicio/jorgicio-gentoo.git
  auto-sync = no
#+END_EXAMPLE
Bypass all packages except ~vscodium-bin~ in this overlay:
#+BEGIN_EXAMPLE
  /etc/portage/package.mask:

  ,*/*::jorgicio

  /etc/portage/package.unmask/vscodium-bin:

  app-editors/vscodium-bin::jorgicio
#+END_EXAMPLE
Before you sync the external overlay for the first time, Portage will report this warning:
#+BEGIN_EXAMPLE
  !!! Repository 'jorgicio' is missing masters attribute in '/usr/local/overlay/jorgicio/metadata/layout.conf'
  !!! Set 'masters = gentoo' in this file for future compatibility
  WARNING: One or more repositories have missing repo_name entries:

	  /usr/local/overlay/jorgicio/profiles/repo_name

  NOTE: Each repo_name entry should be a plain text file containing a
  unique name for the repository on the first line.
#+END_EXAMPLE
It should be dispeared after you sync it:
#+BEGIN_EXAMPLE
  emaint sync -r jorgicio↲

  emerge --ask vscodium-bin↲
#+END_EXAMPLE

* Keep your Gentoo up to date

** Rolling Update in Gentoo

According to [[http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=2&chap=1][A Portage Introduction]]:
#+BEGIN_EXAMPLE
  # Updates  repositories
  emerge --sync↲

  # Updates system
  emerge --update --ask --deep --with-bdeps=y @world↲
  # If any of your USE flags has been altered, add "--newuse or -N" as well.
  # In abbreviation:
  emerge -uaDN --with-bdeps=y @world↲

  # Cleans the system by removing packages that are not associated
  # with explicitly merged packages.
  emerge --depclean --ask↲
  # In abbreviation:
  # emerge -ca↲
#+END_EXAMPLE

** Upgrading Kernel

Whenever ~sys-kernel/gentoo-sources~ has been updated, new kernel source will be installed at ~/usr/src/linux-X.Y.Z-gentoo~
#+BEGIN_EXAMPLE
  cd /usr/src/linux-X.Y.Z-gentoo↲
  cp ../linux/.config ./↲

  make oldconfig↲
  ## make menuconfig↲  # If necessary.

  make -j5 && make -j5 modules_install↲

  mount /dev/sdb2 /boot↲
  cp arch/x86/boot/bzImage /boot/EFI/Gentoo/gentoox64.efi↲
  umount /boot↲

  reboot↲

  # Verify the new kernel is working fine!

  # Use eselect to switch kernel!
  eselect kernel list↲
  # New kernel sits at number 2:
  eselect kernel set 2↲

  # Clean up the old kernel
  emerge --depclean --ask↲
  rm -r /usr/src/linux-(Old Kernel)-gentoo↲
  rm -r /lib/modules/(Old Kernel)-gentoo↲
#+END_EXAMPLE
NOTE: See [[https://wiki.gentoo.org/wiki/Kernel/Configuration][Gentoo::Wiki::Kernel/Configuration]], [[http://wiki.gentoo.org/wiki/Kernel/Removal][Gentoo::Wiki::Kernel/Removal]], [[file:gentoo_installation.org::#CompilingKernel][Compiling Kernel]] for further details.

* Installing software

** System Software

*** gentoolkit
#+BEGIN_EXAMPLE
  # For portage tools： equery, eclean, etc
  emerge --ask gentoolkit↲
#+END_EXAMPLE

*** NTFS
#+BEGIN_EXAMPLE
  # NTFS support
  emerge --ask ntfs3g↲
#+END_EXAMPLE

*** cronie & anacron
    :PROPERTIES:
    :CUSTOM_ID: Cronie
    :END:
See [[https://wiki.gentoo.org/wiki/Cron][Gentoo::Wiki::Cron]] for reference.
~sys-process/cronie~ has built-in ~anacron~ support which is disabled
by default. *ENABLE* it to run ~fstrim~ periodically.
#+BEGIN_EXAMPLE
  # package.use
  sys-process/cronie anacron

  emerge -aN sys-process/cronie↲

  # Make sure the cron daemon of choice has been added to the system's
  # init process. This is NOT added by default with Cronie package.
  rc-update add cronie default↲

  # Create /etc/cron.daily/fstrim：
  ---------------------------------------------------------------------
  #!/bin/sh

  /sbin/fstrim /
  EXITVALUE=$?
  if [ $EXITVALUE != 0 ]; then
      /usr/bin/logger -t logrotate "ALERT fstrim exited abnormally with [$EXITVALUE]"
  fi
  exit 0
  ---------------------------------------------------------------------
  # Ensure the fstrim script has the right permission(755).
#+END_EXAMPLE
[2017-03-21 Tue 22:11] ~/~ takes 24% disk space. For 0-30% capacity
usage, maybe a weekly fstrim is reasonable[fn:2].

*** X Window System
**** Video[fn:3]
***** Kernel
#+BEGIN_EXAMPLE
  # kernel .config:
  Device Drivers  --->
       Graphics support  --->
           <*> /dev/agpgart (AGP Support)  --->
               --- /dev/agpgart (AGP Support)
               < >   AMD Opteron/Athlon64 on-CPU GART support
               -*-   Intel 440LX/BX/GX, I8xx and E7x05 chipset support
               < >   SiS chipset support
               < >   VIA chipset support
	   ...
	   <*> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)  --->
               --- Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)
               [*]   Enable legacy fbdev support for your modesetting driver
	   ...
	   <*> Intel 8xx/9xx/G3x/G4x/HD Graphics
#+END_EXAMPLE
***** Drivers
Haswell 4670K's HD4600 belongs to ~i965~.
#+BEGIN_EXAMPLE
  # make.conf:
  
  ## DEPRECATED in mesa-22
  ## VIDEO_CARDS="intel i965"
  
  VIDEO_CARDS="intel"
  emerge --ask --changed-use --deep @world↲
#+END_EXAMPLE
Here ~VIDEO_CARDS~ is a ~USE_EXPAND~ flag, which is documented in the
~profiles/desc/~ directory with one file per flag[fn:4].

The ~intel~ value is for ~x11-base/xorg-drivers~, which is the meta
package containing deps on all xorg drivers.  The ~i965~ value are for
~media-libs/mesa~.

Prior to ~xorg-drivers 1.19~, ~VIDEO_CARDS="intel i965"~ is the same
as ~VIDEO_CARDS="intel"~. ~i965~ is added in [[https://github.com/gentoo/gentoo/commit/0f26449868d8412b9629ee3b7cd4ba18427b5b36][COMMIT 0f26449]] and came
into effect from [[https://github.com/gentoo/gentoo/commit/88e99c24dc6887dce2fda053209b17d0c004aedf][COMMIT 88e99c2]].

Start from ~xorg-drivers 21.1~, according to [[https://github.com/gentoo/gentoo/commit/3c704ad609f4dcb64fd78057aad39e94097a26d8][COMMIT 3c704ad]], ~i965~ is dropped.
Only ~VIDEO_CARDS="intel"~ is needed and ~xf86-video-intel~ can be safely
removed from the world set if you DON'T use Intel DDX.
#+BEGIN_EXAMPLE
  # xorg-drivers-1.18-r1.ebuild
  PDEPEND="
    ...
    video_cards_intel?         ( x11-drivers/xf86-video-intel )
    ...
  "
  
  # xorg-drivers-1.19.ebuild
  PDEPEND="
    ...
    video_cards_i915?          ( x11-drivers/xf86-video-intel )
    video_cards_i965?          ( >=x11-base/xorg-server-${PV}[glamor] )
    video_cards_intel?         ( !video_cards_i965? ( x11-drivers/xf86-video-intel ) )
    ...
  "
  # xorg-drivers-21.1.ebuild
  PDEPEND="
    ...
    video_cards_i915?          ( x11-drivers/xf86-video-intel )
    video_cards_intel?         ( >=x11-base/xorg-server-${PV}[-minimal] )
    ...
  "
#+END_EXAMPLE
See [[https://devmanual.gentoo.org/eclass-reference/ebuild/index.html][Ebuild Reference]] for details about ebuild file.

***** Intel DDX & Modesetting DDX
#+BEGIN_EXAMPLE
  Beginning with x11-base/xorg-drivers-1.19, the x11-base/xorg-drivers package (in
  addition to the mesa package) includes support the i965 USE flag. This will omit
  selection of the deprecating x11-drivers/xf86-video-intel driver in favor of the
  more maintained, generic modesetting DDX driver built-in to
  x11-base/xorg-server.
#+END_EXAMPLE
For staying with Intel DDX:
#+BEGIN_EXAMPLE
  # make.conf:
  VIDEO_CARDS="intel i915"

  emerge -aDN @world↲
#+END_EXAMPLE
For switching over to Modesetting DDX:
#+BEGIN_EXAMPLE
  # make.conf:
  VIDEO_CARDS="intel"
  
  emerge --ask --change-use --deep @world↲
  
  # package.use, add:  ❶
  
  # required by x11-base/xorg-drivers-1.19::gentoo[video_cards_i965]
  # >=x11-base/xorg-server-1.19.1 glamor
#+END_EXAMPLE
❶ In ~<xorg-server-1.19.5~, you need to manually enable USE flag ~glamor~. After
[[https://github.com/gentoo/gentoo/commit/10e4c208624c0d5bb6db890fb397f28a8dfbf60a][this commit]], it is enabled by default. In newest ~xorg-server~, this USE flag is
dropped.

As of [2017-04-19 Wed 09:40], for safe transaction purpose, I keep
both of the DDX drivers. The config is the same as with modesetting
DDX, except that ~xf86-video-intel~ remains installed. We can select
one of them as shown below.

To force Xorg server to use the Intel DDX driver with SNA for hardware
accelleration:
#+BEGIN_EXAMPLE
  FILE: /etc/portage/make.conf
  
  VIDEO_CARDS="intel i915"
  emerge --ask --change-use --deep @world↲
  
  FILE: /etc/X11/xorg.conf.d/20-intel.conf
  
  # Force Intel DDX
  Section "Device"
      Identifier  "Intel Graphics"
      Driver      "intel"
      Option      "AccelMethod"    "sna"
  EndSection
#+END_EXAMPLE

As of [2022-03-23 Wed 21:37], Intel has not updated [[https://cgit.freedesktop.org/xorg/driver/xf86-video-intel/log/][xf86-video-intel]] for quite
some time. The modesetting driver is a more reasonable choise. To force the
modesetting driver:
#+BEGIN_EXAMPLE
  FILE: /etc/portage/make.conf
  
  VIDEO_CARDS="intel"
  
  emerge --ask --change-use --deep @world↲
  
  FILE: /etc/X11/xorg.conf.d/20-modesetting.conf
  
  #Force modesetting DDX
  Section "Device"
      Identifier  "Intel Graphics"
      Driver      "modesetting"
      Option      "AccelMethod"    "glamor"
      Option      "DRI"            "3"
  EndSection
#+END_EXAMPLE
NOTE: Since ~dri3~ is enabled by default[fn:5]. The ~Option "DRI" "3"~
line might NOT be necessary? You can verify if ~dri3~ is enabled or
not via the following command:
#+BEGIN_EXAMPLE
  LIBGL_DEBUG=verbose mpv ...

  Output:
  ......
  libGL: pci id for fd 13: 8086:0412, driver i965
  libGL: OpenDriver: trying /usr/lib64/dri/tls/i965_dri.so
  libGL: OpenDriver: trying /usr/lib64/dri/i965_dri.so
  ......
  libGL: Using DRI3 for screen 0
  ......
#+END_EXAMPLE
***** TODO Mesa
#+BEGIN_EXAMPLE
  # package.use
  media-libs/mesa-10.2 -vaapi -llvm -gallium
#+END_EXAMPLE
***** VAAPI[fn:6]
#+BEGIN_EXAMPLE
  # Enable VAAPI globally
  ## make.conf, add:
  USE="vaapi"

  # Enabling VAAPI support will pull in the ~x11-libs/libva~ package.
  ## package.use:
  x11-libs/libva opengl

  emerge --ask --changed-use --deep @world↲
#+END_EXAMPLE

After [[https://gitweb.gentoo.org/repo/gentoo.git/commit/x11-libs/libva/libva-2.13.0-r1.ebuild?id=564e4e3d1b14e0b5e88278c2cade94228af9a79c][this commit]], ~libva-intel-driver~ won't be pulled in automatically by
setting ~VIDEO="intel i965"~ in ~make.conf~. It should be installed manually, as
is suggested in the message shown after the installation of ~libva~.
#+begin_example
  # x11-libs/libva-2.13.0-r1.ebuild
  
  ...
  pkg_postinst() {
    optfeature_header
    optfeature "NVIDIA GPU support" x11-libs/libva-vdpau-driver
    optfeature "Older Intel GPU support" x11-libs/libva-intel-driver
    optfeature "Newer Intel GPU support" x11-libs/libva-intel-media-driver
  }
  
  # Install libva-intel-driver manually.
  emerge --ask libva-intel-driver↲
#+end_example
**** Audio
References:
+ [[https://wiki.gentoo.org/wiki/ALSA][Gentoo::Wiki::Alsa]]
+ [[https://www.alsa-project.org/main/index.php/Asoundrc][Asoundrc]]
+ [[https://www.alsa-project.org/alsa-doc/alsa-lib/pcm_plugins.html][ALSA::Plugin]]
+ [[https://alsa.opensrc.org/Asoundrc][ALSA Wiki::Asoundrc]]
#+begin_example
  # kernel .config
  Device Drivers --->
	 <*> Sound card support --->
	     <*> Advanced Linux Sound Architecture --->
		     HD Audio --->
			<*> HD Audio PCI
			...
			<*> Build Realtek HD-audio codec support
			...
			-*- Enable generic HD-audio codec parser
		 [*] USB Sound Devices --->
		     <*> USB Sound/MIDI driver

  # Install media-sound/alsa-utils
  emerge --ask alsa-utils↲
#+end_example
Create =~/.asoundrc= if not exists.
#+begin_src emacs-lisp :exports results
  ;; ~/.asoundrc
  (with-temp-buffer
    (insert-file-contents "~/.asoundrc")
    (buffer-string))
#+end_src
According to [[https://www.alsa-project.org/alsa-doc/alsa-lib/pcm_plugins.html][ALSA::Plugin]], =~/.asoundrc= is annotated as shown below.
#+begin_example
  pcm.!default {                                ❶
	  type plug                             ❷
	  slave {                               ❸
		  pcm {
			  type dmix             ❹
			  ipc_key 1024          ❺
			  slave {
				  pcm "hw:2,0"  ❻
			  }
		  }
	  }
  }

  ctl.!default {
	  type hw
	  card SoundBar
  }

  ❶ The keyword default is defined in the ALSA lib API and will always
  access hw:0,0 - the default device on the default
  soundcard. Specifying the !default name supersedes the one defined in
  the ALSA lib API.

  ❷ Automatic conversion plugin
  This plugin converts channels, rate and format on request.

  ❸ A 'wrapper'(virtual device) of your pcm device.

  ❹ This plugin provides direct mixing of multiple streams.

  ❺ unique IPC key

  ❻ The numbers after hw: stand for the sound card number and the device
  number. A third number can be added (hw:0,0,0) for the sub-device
  number, but it defaults to the next sub-device avaliable. The numbers
  start from zero, so, for example, to access the first device on the
  second sound card, you would use hw:1,0.

  Sound card number and device number can be get by running:

  # Included in media-sound/alsa-utils
  aplay -l↲

  ,**** List of PLAYBACK Hardware Devices ****
  card 0: HDMI [HDA Intel HDMI], device 3: Generic Digital [Generic Digital]
    Subdevices: 1/1
    Subdevice #0: subdevice #0
  card 1: PCH [HDA Intel PCH], device 0: ALC887-VD Analog [ALC887-VD Analog]
    Subdevices: 1/1
    Subdevice #0: subdevice #0
  card 1: PCH [HDA Intel PCH], device 1: ALC887-VD Digital [ALC887-VD Digital]
    Subdevices: 1/1
    Subdevice #0: subdevice #0
  card 2: SoundBar [Dell AC511 USB SoundBar], device 0: USB Audio [USB Audio]
    Subdevices: 1/1
    Subdevice #0: subdevice #0
#+end_example
**** X Server
Additional USE flags:
#+BEGIN_EXAMPLE
  # Required in Gentoo's desktop profile

  # Jeremy Olexa <darkside@gentoo.org> (07 Oct 2011)
  # Required by mesa, ultimately by xorg-server (every desktop) bug 385843
  dev-libs/libxml2 python
#+END_EXAMPLE

#+begin_example
  Starting 2020-07-15, stable keyworded x11-base/xorg-server will
  default to using the logind interface instead of suid by
  default. resulting in better security by default through running the
  server as a regular user instead of root. However, this will require
  our users to use a logind provider such as elogind or systemd.
#+end_example

According to [[https://wiki.gentoo.org/wiki/Elogind][Gentoo::Wiki::elogind]], the following kernel options are
recommended:
#+begin_example
  General setup  --->
      [*] Control Group support  --->
  File systems  --->
      [*] Inotify support for userspace
#+end_example

And add the following use flags:
#+begin_example
  /etc/portage/make.conf:

  USE="elogind -consolekit -systemd"

  root# emerge --ask --changed-use --deep @world↲
  root# /etc/init.d/elogind start↲
  root# rc-update add elogind boot↲
#+end_example

#+BEGIN_EXAMPLE
  emerge --ask xorg-server↲
#+END_EXAMPLE

**** X Window Manager
#+BEGIN_EXAMPLE
  # In /etc/portage/make.conf, add:
  USE="X -gnome -kde"

  # package.use, add:
  x11-wm/fvwm png truetype vannilla

  # Install fvwm
  emerge --ask fvwm

  # Create ~/.xinitrc, add:
  exec dbus-launch --exit-with-session fvwm

  # Config FVWM, run it for ONCE:
  startx↲

  # Exit X, find ~/.fvwm/.fvwm2rc:
  cd ~/.fvwm↲
  ## Recommanded in FVWM's Manual
  mv .fvwm2rc config↲
#+END_EXAMPLE
See [[https://github.com/huyuehui/config/tree/master/fvwm][My FVWM's Configuration]] for details.

Install additional X utils if needed:
#+begin_example
  # Root window parameter setting utility for X
  emerge --ask x11-apps/xsetroot↲

  # system load average display for X
  emerge --ask x11-apps/xload↲

  # mailbox flag for X 
  emerge --ask x11-apps/xbiff↲
#+end_example
**** X Terminal
#+BEGIN_EXAMPLE
  # package.use, add:
  x11-terms/rxvt-unicode 256-color xft alt-font-width -vanilla perl

  # Install
  emerge --ask rxvt-unicode↲

  # X Terminal's font
  # Create ~/.Xdefaults, add:
  URxvt.font: xft:Dejavu Sans Mono,\
	      xft:wenquanyi bitmap song
#+END_EXAMPLE

**** Language
The *OLD* way:
#+BEGIN_EXAMPLE
  # /etc/portage/make.conf
  LINGUAS="en"
#+END_EXAMPLE
The *NEW* way:

[2016-06-19 Sun], ~L10N USE_EXPAND variable replacing LINGUAS~:[fn:7]
#+BEGIN_EXAMPLE
  LINGUAS as a USE_EXPAND'ed variable is being replaced by the L10N
  variable (see below). This avoids a conceptual clash with the standard
  gettext behaviour. After a transition time for packages to be
  converted, LINGUAS will become a regular environment variable.

  eselect news list↲
   ...
   [23]     2016-06-19  L10N USE_EXPAND variable replacing LINGUAS
   ...
  eselect news read 23↲
#+END_EXAMPLE
[2017-03-20 Mon 21:26], there are still some packages, such as
~iso-codes~, that ain't L10N-compatible. Keep the ~LINGUAS~ set for
now:
#+BEGIN_EXAMPLE
  # /etc/portage/make.conf:

  L10N="en-US"

  # Will be deprecated in the future.
  LINGUAS="en"
#+END_EXAMPLE
A list of L10N values that can be used is provided as
~/usr/portage/profiles/desc/l10n.desc~. To set it per-package, edit
~/etc/portage/package.use~ and prefix the requested language packs
with ~l10n_~[fn:7].

**** Font
See [[file:font.org][Font]] for further information.  
*** Wayland
#+begin_example
  # Enable "wayland" USE flag globally
  vi /etc/portage/make.conf↲

  USE="wayland ..."

  emerge -uaDN --with-bdeps=y @world↲
#+end_example
**** sway
#+begin_example
  # Installation
  emerge --ask gui-wm/sway↲

  # Configuration
  mkdir -p ~/.config/sway/↲
  cp /etc/sway/config ~/.config/sway/↲
#+end_example
**** alacritty
#+begin_example
  # Installation
  emerge --ask x11-terms/alacritty↲

  # Configuration
  mkdir -p ~/.config/alacritty/↲
  cp /usr/share/alacritty/scripts/alacritty.yml ~/.config/alacritty/↲
#+end_example
**** nwg-launchers
Install ~nwg-launchers~ as application launcher for ~Sway~. Currently it is
available in Gentoo's Guru repository.
#+begin_example
  # Setup Gentoo's guru repo as overlay  ❶
  vi /etc/portage/repos.conf/guru.conf↲

  [guru]
  location = /var/db/repos/overlay/guru
  sync-type = git
  sync-uri = https://github.com/gentoo-mirror/guru.git
  auto-sync = no
  ----------------------------------------------------

  vi /etc/portage/package.mask↲

  ,*/*::guru
  ----------------------------------------------------

  cd /etc/portage/package.unmask↲
  vi nwg-launchers↲

  gui-apps/nwg-launchers::guru
#+end_example
❶ See [[https://wiki.gentoo.org/wiki/User:RarogCmex/Project:GURU/End_User_Guide][User guide for Guru repository]] for help.
*** Rust
#+begin_example
  # dev-lang/rust-1.45.2 requires MORE disk space than 8G tmpfs.
  ...
  ,* There is NOT at least 9216 MiB disk space at "/tmp/portage/dev-lang/rust-1.45.2/temp"
  ...

  # For now, use rust-bin instead.
  emerge --ask rust-bin↲
#+end_example
Deliberatly enable some USE flags of ~rust~, disk space required when
compiling can be significantly reduced.
#+begin_example
  # /etc/portage/package.use

  # rust
  >=dev-lang/rust-1.54.0 nightly parallel-compiler rls system-llvm

  emerge --ask dev-lang/rust↲

  # choose between different rust versions
  eselect rust list↲

  # remove rust-bin if necessary
  emerge --depclean dev-lang/rust-bin↲
#+end_example
*** Java

According to [[http://wiki.gentoo.org/wiki/Java][Gentoo::Wiki::Java]], to install ~icedtea-bin~:
#+BEGIN_EXAMPLE
  /etc/portage/package.use:
  >=dev-java/icedtea-bin-7 -cups

  emerge --ask icedtea-bin↲
#+END_EXAMPLE

For the time being[2014-10-26 Sun 06:21], ~icedtea-bin~ doesn't have built-in ~LucidaSansRegular.ttf~ font, which is required by ~libbluray~ to enable its BD-J support. Install ~LucidaSansRegular.ttf~ to ~~/.fonts~ can temporarily fix this issue. But still got some errors to play complex BD-J menus(BD-Live 2.0?). 

To install ~oracle-jdk-bin~:

#+BEGIN_EXAMPLE
  emerge --pretend oracle-jdk-bin↲

  These are the packages that would be merged, in order:

  Calculating dependencies... done!
  [ebuild  N F   ] dev-java/oracle-jdk-bin-1.8.0.45  USE="X fontconfig -alsa (-aqua) -derby -doc -examples -jce -nsplugin -pax_kernel (-selinux) -source" 

  Fetch instructions for dev-java/oracle-jdk-bin-1.8.0.45:
   ,* 
   ,* Oracle requires you to download the needed files manually after
   ,* accepting their license through a javascript capable web browser.
   ,* 
   ,* Download the following files:
   ,*   jdk-8u45-linux-x64.tar.gz
   ,* at 'http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html'
   ,* and move them to '/usr/portage/distfiles'
   ,* 
   ,* If the above mentioned urls do not point to the correct version anymore,
   ,* please download the files from Oracle's java download archive:
   ,* 
   ,*    http://www.oracle.com/technetwork/java/javase/downloads/java-archive-javase8-2177648.html#jdk-8u45-oth-JPR
   ,* 

  The following license changes are necessary to proceed:
   (see "package.license" in the portage(5) man page for more details)
  # required by oracle-jdk-bin (argument)
  >=dev-java/oracle-jdk-bin-1.8.0.45 Oracle-BCLA-JavaSE

  Follow the instructions, then:
  emerge --ask oracle-jdk-bin↲
#+END_EXAMPLE
*** dhcpcd
#+BEGIN_EXAMPLE
  # Upgrade from net-misc/dhcpcd-6.11.5 to net-misc/dhcpcd-7.0.0_beta3

  dhcpcd-7 has copied dhcpcd.duid and dhcpcd.secret from
  /etc to /var/lib/dhcpcd
  and copied leases in /var/lib/dhcpcd to new files with the dhcpcd-
  prefix dropped.

  You should remove these files if you don't plan on reverting
  to an older version:
	  /etc/dhcpcd.duid
	  /etc/dhcpcd.secret
	  /var/lib/dhcpcd/dhcpcd-eno1.lease
	  /var/lib/dhcpcd/dhcpcd-enp4s0.lease
	  /var/lib/dhcpcd/dhcpcd-enp4s0.lease6
#+END_EXAMPLE
*** Syslog-ng
Ref: [[https://wiki.gentoo.org/wiki/Syslog-ng][Gentoo::Wiki::Syslog-ng]]

#+begin_example
  emerge --ask syslog-ng↲
#+end_example

System wide configuration is in ~/etc/syslog-ng/syslog-ng.conf~:
#+begin_src emacs-lisp :exports results
  ;; /etc/syslog-ng/syslog-ng.conf
  
  (with-temp-buffer
    (insert-file-contents "/etc/syslog-ng/syslog-ng.conf")
    (buffer-string))
#+end_src

Start ~syslog-ng~ as system service.
#+begin_example
  # Add the syslog-ng daemon to the default runlevel so that logging starts on system boot:
  rc-update add syslog-ng default↲
  
  # Start the syslog-ng daemon now:
  rc-service syslog-ng start
#+end_example
*** Logrotate
Ref: [[https://wiki.gentoo.org/wiki/Logrotate][Gentoo::Wiki::logrotate]]

#+begin_example
  emerge --ask app-admin/logrotate↲
  
  # By default, a daily cron job configuration is installed with logrotate
  # package. Adjust it according to your needs.
  cat /etc/cron.daily/logrotate↲
  
  EXITVALUE=$?
  if [ $EXITVALUE != 0 ]; then
      /usr/bin/logger -t logrotate "ALERT exited abnormally with [$EXITVALUE]"
  fi
  exit $EXITVALUE
#+end_example

System wide configuration is in ~/etc/logrotate.conf~:
#+begin_src emacs-lisp :exports results
  ;; /etc/logrotate.conf
  
  (with-temp-buffer
    (insert-file-contents "/etc/logrotate.conf")
    (buffer-string))
#+end_src

Application specific configurations can be placed here:
#+begin_example
  cat /etc/logrotate.d/syslog-ng-custom↲
  
  /var/log/daemon.log /var/log/debug.log {
      delaycompress
      missingok
      sharedscripts
      postrotate
          /etc/init.d/syslog-ng reload > /dev/null 2>&1 || true
      endscript
  }
#+end_example
See [[https://linux.die.net/man/8/logrotate][logrotate man page]] for further help.
*** NFS
Ref: [[https://wiki.gentoo.org/wiki/Nfs-utils][Gentoo::Wiki::Nfs-utils]]

Kernel options:
#+begin_example
  Client:
  
  KERNEL Enabling NFS client support
  File systems --->
    [*] Inotify support for userspace
    [*] Network File Systems --->
          <M>   NFS client support
          < >     NFS client support for NFS version 2
          < >     NFS client support for NFS version 3
          <M>     NFS client support for NFS version 4
                ...
          [*]   NFS client support for NFSv4.1
                ...
          [*]   NFS: Disable NFS UDP protocol support (NEW)
  
  Server:
  
  KERNEL Enabling NFS server support
  File systems --->
    [*] Inotify support for userspace
    [*] Network File Systems --->
          <M>   NFS server support
          [*]     NFS server support for NFS version 3
                  ...
          [*]     NFS server support for NFS version 4
  
#+end_example
Then install the needed package ~emerge --ask net-fs/nfs-utils↲~.

How to use NFS:
#+begin_example
  Client:
  
  # On NFS Server
  cat /etc/exports↲
  
  /export/DATA1 192.168.1.0/24(...)
  
  # As 'root'
  ## To manually start nfsclient
  rc-service nfsclient start↲
  
  ## Or start the nfsclient on boot
  rc-update add nfsclient default↲
  
  ## Mount the remote NFS share
  mount 192.168.1.100:/DATA1 /PATH/To/LOCAL/MOUNT/POINT↲
  
  ## To stop nfsclient
  /etc/init.d/rpcbind stop↲
  
  Server:
  
  # As 'root'
  ## To manually start nfs server
  rc-service nfs start↲
  
  ## To start nfs server on boot
  rc-update add nfs default↲
  
  ## To stop nfs server
  rc-service rpcbind stop↲
#+end_example
*** Upgrading GCC
Reference: [[https://wiki.gentoo.org/wiki/Upgrading_GCC][Gentoo::Wiki::Upgrading GCC]]
#+begin_example
  # Check the current installed GCC versions.
  gcc-config --list-profiles↲
   [1] x86_64-pc-linux-gnu-5.4.0 *
   [2] x86_64-pc-linux-gnu-6.4.0

  gcc-config 2↲

  source /etc/profile↲
  emerge --ask --oneshot --usepkg=n sys-devel/libtool↲

  # Check the current version number and then uninstall the old version:
  gcc --version↲

  emerge --ask --depclean sys-devel/gcc:5.4.0↲
  or
  emerge -ca↲
#+end_example
** Applications

*** vim
#+BEGIN_EXAMPLE
  # Vim Editor
  emerge --ask vim↲
  ## Check
  eselect vi list↲
    [1]   vim *
    [2]   busybox
#+END_EXAMPLE

*** emacs
#+BEGIN_EXAMPLE
  # /etc/portage/package.use

  # Emacs.
  # commit d7fbd72efd2cc6096a71ac654e1659f12963dfe3
  # Migrate from X to gui USE flag.
  >=app-editors/emacs-24.3 gif gui jpeg png svg tiff gtk cairo harfbuzz xft  ❶ ❷
  # required by app-editors/emacs-27.2::gentoo
  # required by @selected
  # required by @world (argument)
  >=app-emacs/emacs-common-1.8 gui

  emerge -a emacs↲
#+END_EXAMPLE
❶ See [[https://github.com/gentoo/gentoo/commit/d7fbd72efd2cc6096a71ac654e1659f12963dfe3#diff-266e679dd27537cb4847ad05a54c97f3][Migrate from X to gui USE flag.]] for the details of adding the
"gui" USE flag.  For further configurations, see [[../emacs/emacs_orgmode_setup.org][Setup Emacs]].

❷ Enable ~cairo~ in Emacs to avoid [[https://github.com/googlefonts/Inconsolata/issues/42][this bug]]. Otherwise the ~Iosevka~
fonts will be rendered with letter-spacing too wide in Emacs.

According to [[https://www.masteringemacs.org/article/whats-new-in-emacs-27-1][this article]], building Emacs with ~cairo~ enabled results
in using ~pango~ instead of ~libXft~ for font support. Gentoo still
need to enable ~xft~ USE flag explicitly.
#+begin_example
  # /usr/portage/app-editors/emacs/emacs-27.2-r4.ebuild

  xft? (
	  media-libs/fontconfig
	  media-libs/freetype
	  x11-libs/libXft
	  x11-libs/libXrender
	  cairo? ( >=x11-libs/cairo-1.12.18 )
	  harfbuzz? ( media-libs/harfbuzz:0= )
	  m17n-lib? (
		  >=dev-libs/libotf-0.9.4
		  >=dev-libs/m17n-lib-1.5.1
	  )
  )
#+end_example
Enable ~harfbuzz~ USE flag for better font handling.
*** p7zip
#+BEGIN_EXAMPLE
  # Zip/Rar support
  ## package.use, add:
  app-arch/p7zip rar
  ## Install
  emerge --ask p7zip↲
#+END_EXAMPLE

*** VSCodium
**** Install from Gentoo's official repository
At [[https://gitweb.gentoo.org/repo/gentoo.git/commit/app-editors/vscodium?id=086fd563321cd912cf817b191685bcc3581e2cde][this commit]], VSCodium goes into Gentoo's official repo.
#+begin_example
  emerge --ask app-editors/vscodim↲
#+end_example

**** Install from overlay (obsolete)
Install it use a third-party overlay: [[https://github.com/jorgicio/jorgicio-gentoo-overlay/tree/master/app-editors/vscodium-bin][jorgicio: vscodium-bin 1.42.1]].
See [[*External Overlay][External Overlay]].

**** Migration from VSCode
#+BEGIN_EXAMPLE
  # Update FVWM Menu's quick link.
  # Replace the 'visual-studio-code' line with the following line.
  vi ~/.fvwm/config↲

  AddToMenu MenuFvwmUtilities     "$[gt.Utilities]" Title
  ...
  +                       "&C. Codium"    Exec exec codium
  ...

  # Migrate personal settings to VSCodium.  ❶❷
  # Restore your old settings.

  cp ~/.config/Code/User/{keybindings.json, settings.json} ~/.config/VSCodium/User

  # For extensions
  # Move to the new extension directory or just REINSTALL them.
  cp -r ~/.vscode/extensions ~/.vscode-oss/

  ❶ https://github.com/VSCodium/vscodium/blob/master/DOCS.md#migrating
  ❷ In a fresh installation, run VSCodium for once to auto create private storage.
#+END_EXAMPLE

**** Extensions
***** Marketplace
VSCodium uses ~open-vsx.org~ as extension gallery. It is not as mature
as VSCode's marketplace for now. You can switch and use the VSCode's
marketplace with the following steps. See [[https://github.com/VSCodium/vscodium/blob/master/DOCS.md#extensions-marketplace][this document]] for details.
#+begin_example
  # Create a custom 'product.json' at '$HOME/.config/VSCodium'

  {
    "extensionsGallery": {
      "serviceUrl": "https://marketplace.visualstudio.com/_apis/public/gallery",
      "cacheUrl": "https://vscode.blob.core.windows.net/gallery/index",
      "itemUrl": "https://marketplace.visualstudio.com/items",
      "controlUrl": "",
      "recommendationsUrl": ""
    }
  }
#+end_example

***** Various programming language support
****** [[https://code.visualstudio.com/docs/languages/cpp][C/C++ extension]]
****** [[https://code.visualstudio.com/docs/languages/go][GOLANG extension]]
You can install the Go extension from the VS Code [[https://marketplace.visualstudio.com/items?itemName=ms-vscode.Go][marketplace]].

#+BEGIN_EXAMPLE
  # Press CTRL+, to customize user settings:
  # VS Code -> USER SETTINGS:  ❶
  {
      "[cpp]": {
	  "editor.quickSuggestions": false
      },
      "[c]": {
	  "editor.quickSuggestions": false
      },
      "window.zoomLevel": 1,
      "go.gopath": "~/work/go",
      "go.inferGopath": true,
      "go.toolsGopath": "~/work/go/tools",
      "http.proxy": "socks5://127.0.0.1:xxxx",
  }

  # Use Delve to debug Go program. It seems that setting
  # $PATH in ~/.bashrc takes no effect.  ❷
  ## ~/.bash_profile
  export PATH=~/work/go/tools/bin:$PATH
#+END_EXAMPLE
❶
- [[https://github.com/Microsoft/vscode-go/wiki/GOPATH-in-the-VS-Code-Go-extension][GOPATH in the VS Code Go extension]]
- [[https://github.com/Microsoft/vscode-go/issues/1525][go.inferGopath should not ignore global gopath #1525]]
- [[https://github.com/Microsoft/vscode-go/wiki/Debugging-Go-code-using-VS-Code][Debugging Go code using VS Code]]

❷ Other tools works fine without this setting.
- [[https://github.com/Microsoft/vscode-go/issues/358#issuecomment-323528504][Insiders can't start Go debug session: "Cannot find Delve debugger. #358]]

Press ~CTRL+SHIFT+P~, then run ~Go: Install/Update Tools~ to install needed tools.

****** [[https://marketplace.visualstudio.com/items?itemName=matklad.rust-analyzer][rust-analyzer]]
Ref: [[https://rust-analyzer.github.io/manual.html][rust-analyzer's manual]]

rust-analyzer needs the sources of the standard library, which Gentoo doesn't
provide as a stand-alone package in their official repositories. Enable the
~rls~ and ~rust-src~ USE flag of your rust-bin package can solve this issue.
#+begin_example
  # /etc/portage/package.use

  # rust
  >=dev-lang/rust-bin-1.54.0 ... rls rust-src...  ❸
#+end_example
❸ See [[*Rust]] for the complete USE flags.
*** MPV & FFmpeg

Because ~mpv~[fn:8] prefers FFmpeg over Libav and ~Kodi(XBMC)~ requires FFmpeg, we will switch from Libav to FFmpeg.

#+BEGIN_EXAMPLE
  emerge --unmerge mpv↲
  emerge --unmerge libav↲

  # Clean their configuration
  rm /etc/portage/package.unmask/libav↲
  # Make sure 'libav' has not been unmasked
  rm -r /etc/portage/profile↲

  # Adjust USE flags
  >=media-video/ffmpeg-2.7 alsa fontconfig opengl truetype vorbis
  >=media-video/mpv-0.7.3 bluray dvd jpeg -xv

  # FFmpeg will be pulled in by mpv automatically
  emerge --ask mpv↲

  # Clean package dependencies
  emerge --depclean↲

#+END_EXAMPLE

*** Fontforge
#+BEGIN_EXAMPLE
  # /etc/portage/package.use

  media-gfx/fontforge cairo gtk png

  $ emerge --ask fontforge↲
#+END_EXAMPLE
*** Git
#+BEGIN_EXAMPLE
  # package.use:
  dev-vcs/git -perl

  emerge --ask dev-vcs/git↲
#+END_EXAMPLE
To bypass the GFW:
#+begin_example
  # Setup a socks5 proxy for Git
  git config --global http.proxy socks5://127.0.0.1:xxxx↲

  ...Do your work...

  # Unset the socks5 proxy
  git config --global --unset http.proxy
#+end_example
*** glider
[[https://github.com/nadoo/glider][glider]] is a forward proxy with multiple protocols support, and also a dns forwarding server with ipset management features(like dnsmasq).
**** Prerequisites 
#+BEGIN_EXAMPLE
  # $GOPATH/src/github.com/nadoo/glider/ipset/ipset_linux.go

  func NewManager(rules []*rule.Config) (*Manager, error) {
       fd, err := syscall.Socket(syscall.AF_NETLINK, syscall.SOCK_RAW, syscall.NETLINK_NETFILTER)    ❶
       ...
       // create ipset
       for _, r := range rules {
	   if r.IPSet != "" {
	      CreateSet(fd, lsa, r.IPSet)
	   }
       }
       ...
  }

  ...

  // CreateSet create a ipset
  func CreateSet(fd int, lsa syscall.SockaddrNetlink, setName string) {
       ...
       req := NewNetlinkRequest(IPSET_CMD_CREATE|(NFNL_SUBSYS_IPSET<<8), syscall.NLM_F_REQUEST)

       // TODO: support AF_INET6
       req.AddData(NewNfGenMsg(syscall.AF_INET, 0, 0))
       req.AddData(NewRtAttr(IPSET_ATTR_PROTOCOL, Uint8Attr(IPSET_PROTOCOL)))
       req.AddData(NewRtAttr(IPSET_ATTR_SETNAME, ZeroTerminated(setName)))
       req.AddData(NewRtAttr(IPSET_ATTR_TYPENAME, ZeroTerminated("hash:net")))    ❷
       req.AddData(NewRtAttr(IPSET_ATTR_REVISION, Uint8Attr(1)))
       req.AddData(NewRtAttr(IPSET_ATTR_FAMILY, Uint8Attr(2)))
       req.AddData(NewRtAttr(IPSET_ATTR_DATA|NLA_F_NESTED, nil))
       ...
  }

  ❶ Without netfilter enabled in kernel, glider will complain about "protocol not supported".
  ❷ The IPSET_ATTR_TYPENAME(hash:net) will be used to configure the kernel.
#+END_EXAMPLE

The kernel should be configured to support IPSet.
#+BEGIN_EXAMPLE
  [*] Networking Support   --->
	Networking Options --->
	  [*] Network packet filtering framework (Netfilter) --->
		<*> IP set support --->
		      <*> hash:net set support
#+END_EXAMPLE
*** MPV
#+BEGIN_EXAMPLE
  # package.use:

  media-video/mpv bluray dvd jpeg -xscreensaver -xv

  # Ilya Tumaykin <itumaykin+gentoo@gmail.com> (02 Feb 2017)
  # Enable luajit for OSC and youtube-dl support by default.
  # Override default +sdl from desktop profile and disable sdl outputs.
  # These outputs are for systems without a proper audio/video support.
  media-video/mpv lua luajit -sdl

  emerge --ask mpv↲
#+END_EXAMPLE
mpv also supports the VAAPI acceleration through the command-line
option ~--hwdec=vaapi~[fn:9].


* Footnotes

[fn:11]  [[https://github.com/gentoo-mirror/guru/tree/master/gui-apps/wofi][wofi's ebuild in the Gentoo's Guru repo]]. 

[fn:1] ~/usr/portage/profiles/targets/desktop/package.use~

[fn:2] [[http://chmatse.github.io/SSDcronTRIM/][SSDcronTRIM]]

[fn:3] [[https://wiki.gentoo.org/wiki/Intel][Gentoo::Wiki::Intel]]

[fn:4] [[https://devmanual.gentoo.org/general-concepts/use-flags/index.html][Gentoo::DEV Manual::USE Flags]]

[fn:5] 
See [[https://cgit.freedesktop.org/xorg/xserver/tree/configure.ac]["configure.ac" in Xorg source files]] for details.
See [[https://www.gnu.org/software/autoconf/manual/autoconf.html][Autoconf Manual]] for reference.
#+BEGIN_EXAMPLE
  FILE: xorg/xserver/configure.ac

  ......
  AC_ARG_ENABLE(dri2,           AS_HELP_STRING([--enable-dri2], [Build DRI2 extension (default: auto)]), [DRI2=$enableval], [DRI2=auto])
  AC_ARG_ENABLE(dri3,           AS_HELP_STRING([--enable-dri3], [Build DRI3 extension (default: auto)]), [DRI3=$enableval], [DRI3=auto])

  ......

  case x"$DRI3" in
	  xyes|xauto)
		  DRI3=yes
		  AC_DEFINE(DRI3, 1, [Build DRI3 extension])
		  DRI3_LIB='$(top_builddir)/dri3/libdri3.la'
		  SDK_REQUIRED_MODULES="$SDK_REQUIRED_MODULES $DRI3PROTO"
		  AC_MSG_NOTICE([DRI3 enabled]);
		  ;;
  esac
  ......
#+END_EXAMPLE
Modesetting DDX will use ~DRI3~ by default. But for Intel DDX, there
is a restriction:
#+BEGIN_EXAMPLE
  equery uses xf86-video-intel↲

  + + dri   : Enable direct rendering: used for accelerated 3D and some 2D, like DMA
  - - dri3  : (Restricted to <=x11-drivers/xf86-video-intel-2.99.917_p20160621)
              Enable DRI3 support
#+END_EXAMPLE
See [[https://cgit.freedesktop.org/xorg/driver/xf86-video-intel/commit/?id=9154dff9aedad3271f629edb1ccc9c8d273ca7bc][DRI3 is not supported by mesa/i915]] for details.
#+BEGIN_EXAMPLE
  # For modesetting DDX:
  man xorg.conf↲

  ......
  Option "DRI2" "boolean"
	 enable or disable DRI2. DRI2 is disabled by default.
  ......

  # For intel DDX:
  man intel↲

  ......
  Option "DRI" "string"
	 Disable  or enable DRI support. A driver name to use can be pro‐
	 vided instead of simple boolean value, which will be  passed  to
	 the  GL  implementation  for it to load the appropriate backend.
	 Alternatively the maximum level of DRI to enable (e.g. "1",  "2"
	 or "3") can be specified.

	 Default:  All levels of DRI are enabled for configurations where
	 it is supported.
  ......
#+END_EXAMPLE

[fn:6] [[https://wiki.gentoo.org/wiki/VAAPI][Gentoo::Wiki::VAAPI]]

[fn:7] [[https://wiki.gentoo.org/wiki/Localization/Guide#L10N][Gentoo::Wiki::Localization/Guide]]

[fn:8] [[https://github.com/mpv-player/mpv#ffmpeg-vs-libav][FFmpeg vs. Libav]]

[fn:9] [[https://wiki.gentoo.org/wiki/VAAPI#mpv][Gentoo::Wiki::VAAPI::mpv]]

